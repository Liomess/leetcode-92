# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        if left==right:
            return head
        dummy=ListNode()
        dummy.next=head
        curr=head
        leff=left
        while leff>1:
            curr=curr.next
            dummy=dummy.next
            leff-=1
        leff=left
        prev=dummy
        while leff!=right:
            jump=curr.next
            curr.next=jump.next
            jump.next=prev.next
            prev.next=jump
            leff+=1
        if left==1:
            head=prev.next
        return head
